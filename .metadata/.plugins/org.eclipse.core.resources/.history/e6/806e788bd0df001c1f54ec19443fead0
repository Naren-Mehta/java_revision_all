package math;

public class DivideTwoIntegers {

	public int divide(int dividend, int divisor) {

//		int sign=1;
//		if(dividend <0 && divisor < 0) {
//			sign = 1;
//		}else if (dividend <0 || divisor < 0){
//			sign = -1;
//		}
//		
//		if(dividend <= Integer.MIN_VALUE) {
//			dividend = Integer.MIN_VALUE +1;
//		}
//		if(dividend > Integer.MAX_VALUE) {
//			dividend = Integer.MAX_VALUE;
//		}
//		
//		dividend = Math.abs(dividend);
//		divisor = Math.abs(divisor);
//		
//		int count =0;
//		while(divisor <= dividend) {
//			dividend  -= divisor;
//			count++;
//		}
//		
//		return sign * count;

		int sign = ((dividend < 0) ^ (divisor < 0)) ? -1 : 1;

		// Update both divisor and
		// dividend positive
		dividend = Math.abs(dividend);
		divisor = Math.abs(divisor);

		// Initialize the quotient
		int quotient = 0;

		while (dividend >= divisor) {
			dividend -= divisor;
			++quotient;
		}
		// if the sign value computed earlier is -1 then negate the value of quotient
		if (sign == -1)
			quotient = -quotient;

		return quotient;
	}

	public static void main(String[] args) {
		DivideTwoIntegers obj = new DivideTwoIntegers();
		System.out.println(obj.divide(43, -8));
	}
}
